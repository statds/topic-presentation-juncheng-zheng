library(dplyr)
library(magrittr)
library(knitr)
library(utils)
library(ggplot2)
library(gmodels)
install.packages('gmodels')
install.packages('gmodels')
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(magrittr)
library(knitr)
library(utils)
library(ggplot2)
library(gmodels)
library(car)
Absenteeism_data <- read.csv("MFGEmployees4.csv")
head(Absenteeism_data)
Absenteeism_data %>% group_by(Division)%>% summarize(mean_LengthService = mean(LengthService)) %>% knitr::kable(,caption = "Mean length of service by Division")
ggplot(data=Absenteeism_data, mapping=aes(Division,LengthService)) + geom_bar(stat="summary", fun=mean,width = 0.25, color = "grey", fill="grey")
meanabsentHours <- mean(Absenteeism_data$AbsentHours)
sdabsentHours <- sd(Absenteeism_data$AbsentHours)
meanlengthService <- mean(Absenteeism_data$LengthService)
sdlengthService <- sd(Absenteeism_data$LengthService)
meanage <- mean(Absenteeism_data$Age)
sdage <- sd(Absenteeism_data$Age)
addzscore <- Absenteeism_data %>%
mutate(z_absenthours = (AbsentHours-meanabsentHours)/sdabsentHours,
z_LengthService = (LengthService-meanlengthService)/sdlengthService,
z_Age = (Age-meanage)/sdage)
head(addzscore)
t.test(Absenteeism_data$AbsentHours,mu=60)
n = 8336
power.t.test(n=n, delta = meanabsentHours-60, sd=sdabsentHours, sig.level = 0.05,
type = 'one.sample', alternative = 'two.sided', strict=TRUE)
t.test(Absenteeism_data$AbsentHours ~ Absenteeism_data$BusinessUnit,
var.equal=TRUE)
meandiff = 47.06009 - 61.58543
power.t.test(n=n, delta=meandiff,
sd = sdabsentHours, sig.level = 0.05,
type = 'two.sample', alternative = 'two.sided', strict = TRUE)
ggplot(data=Absenteeism_data,mapping=aes(Division,AbsentHours))+
geom_bar(aes(color=Division,fill=Division),stat='summary',fun=mean,width=0.25)+
theme(axis.text.x=element_blank())
anovatable1 = aov(AbsentHours~Division, data=Absenteeism_data)
summary(anovatable1)
xs = TukeyHSD(anovatable1)
print(xs)
ggplot(data=Absenteeism_data,mapping=aes(AbsentHours, color=Division))+
geom_histogram(fill='white',position = 'dodge')+
theme(legend.position = 'top')+
facet_grid(rows=vars(Division), cols=vars(), scales='free')
result = leveneTest(AbsentHours~Division,Absenteeism_data)
print(result)
hr = read.csv("HRDataset_v14.csv")
head(hr)
summary(hr)
hr_new = filter(hr,EmploymentStatus=="Active")
library(ggpubr)
cor.test(hr_new$EngagementSurvey,hr_new$EmpSatisfaction,method = "pearson")
ggscatter(hr_new,x="EngagementSurvey",y="EmpSatisfaction",
add = "reg.line", conf.int = TRUE, cor.coef = TRUE, cor.method = "spearman",
xlab ="EngagementSurvey",ylab= "EmpSatisfaction")
ggscatter(hr_new,x="EngagementSurvey",y="EmpSatisfaction",
add = "reg.line", conf.int = TRUE, cor.coef = TRUE, cor.method = "pearson",
xlab ="EngagementSurvey",ylab= "EmpSatisfaction")
library(ggpubr)
cor.test(hr_new$EngagementSurvey,hr_new$EmpSatisfaction,method = "spearman")
library(ggpubr)
cor.test(hr_new$EngagementSurvey,hr_new$EmpSatisfaction,method = "spearman")
ggscatter(hr_new,x="EngagementSurvey",y="EmpSatisfaction",
add = "reg.line", conf.int = TRUE, cor.coef = TRUE, cor.method = "spearman",
xlab ="EngagementSurvey",ylab= "EmpSatisfaction")
install.packages("reticulate")
reticulate::repl_python()
Y
reticulate::repl_python()
import pandas as pb
reticulate::repl_python()
reticulate::repl_python()
import pandas as pb
reticulate::repl_python()
reticulate::repl_python()
import pandas as pb
library(reticulate)
reticulate::repl_python()
import pandas as pd
import pandas as pd
dobjobapp = pd.read_csv("nyc_DobJobApp_2021.csv")
collisions = pd.read_csv("nyc_mv_collisions_202201.csv")
quit
library(tidyverse)
dobjobapp %>% head(5)
collisions
reticulate::repl_python()
collisions.head()
collisions.head()
quit
pd = import("pandas",convert=FALSE)
#install.packages("reticulate")
library(reticulate)
pd = import("pandas",convert=FALSE)
dobjobapp = pd.read_csv("nyc_DobJobApp_2021.csv")
dobjobapp = pd$read_csv("nyc_DobJobApp_2021.csv")
#use_python("/usr/local/bin/python")
setwd('D:\dataworks2\STAT-3255\topic2')
#use_python("/usr/local/bin/python")
setwd('D:/dataworks2/STAT-3255/topic2')
dobjobapp = pd$read_csv("nyc_DobJobApp_2021.csv")
collisions = pd$read_csv("nyc_mv_collisions_202201.csv")
head(collisions)
collisions$head()
collisions_r = collisions %>% as.data.frame()
class(collisions)
reticulate::repl_python()
import pandas as pd
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
quit
library(tidyverse)
collisions = read_csv("nyc_mv_collisions_202201.csv")
collisions %>% head(5)
source_python('add.py')
add(5, 10)
reticulate::repl_python()
import pandas as pd
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from plotnine import *
import pandas as pd
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from plotnine import *
quit
library(tidyverse)
df = read_csv("311_012322_013022.csv")
reticulate::repl_python()
df = pd.read_csv("311_012322_013022.csv")
df.head()
df = pd.read_csv("311_012322_013022.csv")
df['hour24'] = pd.to_datetime(df['Created Date']).dt.hour
df.head()
(
ggplot(df, aes(x = 'hour24', y = after_stat('count')))
+ geom_histogram(binwidth = 1, bins = 24)
+ facet_wrap('Borough') # facet wrap
+ ggtitle("Hourly Request by Borough #1")
)
quit
library(tidyverse)
df_r = py$df
ggplot(df, aes(x = 'hour24', y = after_stat('count')))
+ geom_histogram(binwidth = 1, bins = 24)
library(tidyverse)
df_r = py$df
df_r %>% head()
ggplot(df, aes(x = 'hour24', y = after_stat('count')))
+ geom_histogram(binwidth = 1, bins = 24)
ggplot(df_r, aes(x = 'hour24', y = after_stat('count')))
+ geom_histogram(binwidth = 1, bins = 24)
ggplot(df_r, aes(x = 'hour24', y = after_stat('count')))
+ geom_histogram(binwidth = 1, bins = 24)
ggplot(df_r, aes(x = hour24, y = after_stat('count')))
+ geom_histogram(binwidth = 1, bins = 24)
ggplot(df_r, aes(x = hour24, y = after_stat('count')))
ggplot(df_r, aes(x = hour24, y = after_stat('count')))+geom_histogram()
ggplot(df_r, aes(x = hour24)+geom_histogram()
ggplot(df_r, aes(x = hour24))+geom_histogram()
ggplot(df_r, aes(x = hour24))+ geom_histogram(binwidth = 1, bins = 24)
+ facet_wrap('Borough') # facet wrap
install.packages('facet')
reticulate::repl_python()
(
ggplot(df, aes(x = 'hour24', y = after_stat('count'),fill='Borough'))
+ geom_histogram(binwidth = 1, bins = 24)
+ ggtitle("Hourly Request by Borough #2")
)
quit
ggplot(df_r, aes(x = hour24,fill='Borough'))+
geom_histogram(binwidth = 1, bins = 24)+
ggtitle("Hourly Request by Borough #2")
ggplot(df_r, aes(x = hour24,fill=Borough))+
geom_histogram(binwidth = 1, bins = 24)+
ggtitle("Hourly Request by Borough #2")
source_python('add.py')
add(5, 10)
unlink("topic2_cache", recursive = TRUE)
library(tidyverse)
df_r = py$df
df_r %>% head()
ggplot(df_r, aes(x = hour24,fill=Borough))+
geom_histogram(binwidth = 1, bins = 24)+
ggtitle("Hourly Request by Borough #2")
ggplot(df_r, aes(x = `hour24`,fill=Borough))+
geom_histogram(binwidth = 1, bins = 24)+
ggtitle("Hourly Request by Borough #2")
ggplot(df_r, aes(x = hour24,fill=Borough))+
geom_histogram(binwidth = 1, bins = 24)+
ggtitle("Hourly Request by Borough #2")
ggplot(df_r, aes(x = hour24,fill=Borough))+
geom_histogram(binwidth = 1, bins = 24)+
ggtitle("Hourly Request by Borough #2")
ggplot(df_r, aes(x = hour24,fill=Borough))+
geom_histogram(binwidth = 1, bins = 24)+
ggtitle("Hourly Request by Borough #2")
df = pd$read_csv("311_012322_013022.csv")
df['hour24'] = pd.to_datetime(df['Created Date']).dt.hour
df['hour24'] = pd$to_datetime(df['Created Date'])$dt$hour
reticulate::repl_python()
df = pd.read_csv("311_012322_013022.csv")
df['hour24'] = pd.to_datetime(df['Created Date']).dt.hour
df.head()
(
ggplot(df, aes(x = 'hour24', y = after_stat('count'),fill='Borough'))
+ geom_histogram(binwidth = 1, bins = 24)
+ ggtitle("Hourly Request by Borough #2")
)
quit
library(tidyverse)
df_r = py$df
df_r %>% head()
ggplot(df_r, aes(x = hour24,fill=Borough))+
geom_histogram(binwidth = 1, bins = 24)+
ggtitle("Hourly Request by Borough #2")
ggplot(df_r, aes(x=Borough))+
geom_histogram(binwidth = 1, bins = 24)+
ggtitle("Hourly Request by Borough #2")
class(df_r)
head(df_r$hour24)
table(df_r$hour24)
